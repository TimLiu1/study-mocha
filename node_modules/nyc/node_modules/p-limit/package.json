{
  "_args": [
    [
      {
        "raw": "p-limit@^1.1.0",
        "scope": null,
        "escapedName": "p-limit",
        "name": "p-limit",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/Users/benjamincoe/bcoe/nyc/node_modules/p-locate"
    ]
  ],
  "_from": "p-limit@>=1.1.0 <2.0.0",
  "_id": "p-limit@1.1.0",
  "_inCache": true,
  "_location": "/nyc/p-limit",
  "_nodeVersion": "4.6.2",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/p-limit-1.1.0.tgz_1479711587647_0.4504568234551698"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.11",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-limit@^1.1.0",
    "scope": null,
    "escapedName": "p-limit",
    "name": "p-limit",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/nyc/p-locate"
  ],
  "_resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.1.0.tgz",
  "_shasum": "b07ff2d9a5d88bec806035895a2bab66a27988bc",
  "_shrinkwrap": null,
  "_spec": "p-limit@^1.1.0",
  "_where": "/Users/benjamincoe/bcoe/nyc/node_modules/p-locate",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-limit/issues"
  },
  "dependencies": {},
  "description": "Run multiple promise-returning & async functions with limited concurrency",
  "devDependencies": {
    "ava": "*",
    "delay": "^1.3.1",
    "in-range": "^1.0.0",
    "random-int": "^1.0.0",
    "time-span": "^1.0.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "b07ff2d9a5d88bec806035895a2bab66a27988bc",
    "tarball": "https://registry.npmjs.org/p-limit/-/p-limit-1.1.0.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "276b0aeef73ac9fe0b80622d8261a2bbe4f9f74c",
  "homepage": "https://github.com/sindresorhus/p-limit#readme",
  "keywords": [
    "promise",
    "limit",
    "limited",
    "concurrency",
    "throttle",
    "throat",
    "rate",
    "batch",
    "ratelimit",
    "task",
    "queue",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "p-limit",
  "optionalDependencies": {},
  "readme": "# p-limit [![Build Status](https://travis-ci.org/sindresorhus/p-limit.svg?branch=master)](https://travis-ci.org/sindresorhus/p-limit)\n\n> Run multiple promise-returning & async functions with limited concurrency\n\n\n## Install\n\n```\n$ npm install --save p-limit\n```\n\n\n## Usage\n\n```js\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n\tlimit(() => fetchSomething('foo')),\n\tlimit(() => fetchSomething('bar')),\n\tlimit(() => doSomething())\n];\n\n// only one promise is run at once\nPromise.all(input).then(result => {\n\tconsole.log(result);\n});\n```\n\n\n## API\n\n### pLimit(concurrency)\n\nReturns a `limit` function.\n\n#### concurrency\n\nType: `number`<br>\nMinimum: `1`\n\nConcurrency limit.\n\n### limit(fn)\n\nReturns the promise returned by calling `fn`.\n\n#### fn\n\nType: `Function`\n\nPromise-returning/async function.\n\n\n## Related\n\n- [p-queue](https://github.com/sindresorhus/p-queue) - Promise queue with concurrency control\n- [p-throttle](https://github.com/sindresorhus/p-throttle) - Throttle promise-returning & async functions\n- [p-debounce](https://github.com/sindresorhus/p-debounce) - Debounce promise-returning & async functions\n- [p-all](https://github.com/sindresorhus/p-all) - Run promise-returning & async functions concurrently with optional limited concurrency\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-limit.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.1.0",
  "xo": {
    "esnext": true
  }
}
